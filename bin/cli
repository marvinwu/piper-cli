#!/usr/bin/env node
const program = require('commander')
const JSONStream = require('JSONStream')
const {runnerHelper} = require('../lib/index')
const inputStream = JSONStream.parse()
process.stdin.pipe(inputStream)

program.command('keys').action(options => {
  const result = new Set([])
  inputStream.on('data', data => {
    Object.keys(data).map(key => result.add(key))
  })
  inputStream.on('end', () => {
    console.log(JSON.stringify([...result]))
  })
})

program
  .arguments('<functionName> [params...]')
  // .command('run <functionName> [params...]')
  .option('-p, --pick [pick]]', 'pick property to process')
  .option('-a, --as [as]]', 'set result as')  
  .action(async (functionName, params, options) => {
    const {pick,as} = options
    inputStream.on('data', data => {
      runnerHelper(data,functionName, params, {pick,as}).then((data)=>{
        console.log(JSON.stringify(data))
      }).catch(error=>console.error(error))
    })
  })

program.parse(process.argv)
